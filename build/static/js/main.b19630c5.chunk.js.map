{"version":3,"sources":["modules/baseComponent.js","managers/history.js","modules/login/loginComponent.js","utility/index.js","modules/signup/signUpComponent.js","modules/Header/header.js","modules/popupbox.js","modules/MainComponent/mainComponent.js","modules/Footer/footer.js","modules/MainComponent/index.js","modules/TweetlinkComponent/tweetLinkComponent.js","modules/Header/Conditionalheader.js","Demo/demo.js","Demo/index.js","routes.js","reducers/user.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["BaseComponent","props","Component","history","createBrowserHistory","loginComponent","ToastService","new","place","duration","maxCount","require","Cookies","signUpComponent","Container","styled","div","Image","img","MobileImage","Span","span","Input","input","Button","button","DesktopView","MobileView","HeaderComponent","useState","inputValue","setInputValue","src","type","readOnly","value","onChange","e","target","text","style","paddingBottom","Heading","Tweetdata","Name","Email","Time","QuoteTweet","QuoteTweetcount","Likes","Date","Twitterwebapp","Retweets","Retweetscount","Likescount","Details","useStyles","makeStyles","theme","avatar","marginTop","marginLeft","maingrid","display","justifyContent","popupgrid","padding","MainComponent","classes","url","useLocation","search","slice","count","setCount","useEffect","fetchCount","axios","get","then","res","data","responseData","console","log","catch","err","Grid","xs","className","Avatar","name","Footer","Poweredheading","Xinfin","Year","FooterComponent","CardComponent","border","borderRadius","backgroundColor","color","paddingLeft","paddingRight","fontSize","fontFamily","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","textAlign","no_of_tweets_archived","marginRight","Headerconditional","item","heroContent","palette","background","paper","spacing","heroButtons","cardGrid","paddingTop","flexDirection","boxShadow","outline","cardMedia","alignItems","width","cursor","cardContent","flexGrow","main","marginBottom","cardactionarea","heading","subheading","enterTweetLink","maindiv","container","TextView","Album","useHistory","tweet","setTweet","Fragment","maxWidth","Typography","justify","onClick","test","includes","push","alert","fixed","sm","md","Paper","stopfakenews","CardContent","allImagesdiv","Demo","state","visible","Routes","muiTheme","getMuiTheme","exact","path","component","from","to","connect","user","initialState","isLoggedIn","loginFailure","deviceId","sessionToken","loading","isForgotPasswordSuccess","combineReducers","action","loggerMiddleware","createLogger","createStore","rootReducer","applyMiddleware","thunkMiddleware","Boolean","window","location","hostname","match","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b19630c5.chunk.js","sourcesContent":["//base class\r\nimport React, {Component} from \"react\";\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n}","/**\r\n * Created by Ayush Kulshrestha on 18/09/2019.\r\n */\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\n/**\r\n * The history library lets you easily manage session history anywhere JavaScript runs.\r\n * history abstracts away the differences in various environments and provides a minimal API\r\n * that lets you manage the history stack, navigate, and persist state between sessions.\r\n */\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n","import React from \"react\";\r\nimport { Column, Row } from \"simple-flexbox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CustomInput from \"../../common/components/CustomInput\";\r\nimport { history } from \"../../managers/history\";\r\n\r\nfunction LoginForm(props) {\r\n  let { state, togglePassword, onChangeEvent, onLoginClicked } = props;\r\n  return (\r\n    <Column className=\"w-450 pt-5 align-items-center \" horizontal={\"center\"}>\r\n      <form onSubmit={onLoginClicked} className=\"w-100\">\r\n        <Row className=\"justify-content-center w-100 fs-28 fc-dark-slate-blue\">\r\n          Sign in to your account\r\n        </Row>\r\n\r\n        <div className=\"fc-dark-slate-blue fs-15 mt-5\">Email Address</div>\r\n        <CustomInput\r\n          id=\"email\"\r\n          type=\"text\"\r\n          value={state ? state.email : \"\"}\r\n          onChange={onChangeEvent}\r\n          error={state ? state.emailError : \"\"}\r\n          className=\"fs-15 p-2 mt-1\"\r\n        />\r\n\r\n        <Row className=\"fs-15 mt-4 justify-content-between\">\r\n          <div className=\"fc-dark-slate-blue\">Password</div>\r\n          <div className=\"fc-blue cursor-pointer\" onClick={togglePassword}>\r\n            {state && state.isPasswordVisible\r\n              ? \"Hide Password\"\r\n              : \"Show Password\"}\r\n          </div>\r\n        </Row>\r\n        <CustomInput\r\n          id=\"password\"\r\n          type={state && state.isPasswordVisible ? \"text\" : \"password\"}\r\n          value={state ? state.password : \"\"}\r\n          onChange={onChangeEvent}\r\n          error={state ? state.passwordError : \"\"}\r\n          className=\"fs-15 p-2 mt-1\"\r\n        />\r\n\r\n        <Row vertical={\"center\"} className=\"my-3\">\r\n          <input\r\n            style={{ width: \"15px\" }}\r\n            id=\"isRememberMeSelected\"\r\n            type=\"checkbox\"\r\n            className=\"checkbox-border p-3\"\r\n          />\r\n          <Column className=\"ml-2 fs-15 fc-blue-grey font-weight-normal\">\r\n            Remember me\r\n          </Column>\r\n        </Row>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"bg-blue outline-none text-transform-capitalize\r\n                fc-white w-100 py-2 fs-17 my-3 cursor-pointer\"\r\n        >\r\n          Log in\r\n        </Button>\r\n        <Row className=\"w-100 justify-content-center\">\r\n          Not able to login?\r\n          <a className=\"fc-blue\">Recover Password</a>\r\n        </Row>\r\n      </form>\r\n    </Column>\r\n  );\r\n}\r\n\r\nfunction HeaderComponent(props) {\r\n  return (\r\n    <Row vertical=\"center\" className=\"justify-content-between\">\r\n      {/* <img src=\"/images/limb_logo.svg\" alt='limb' className=\"w-150\"/> */}\r\n      <Row vertical=\"center\">\r\n        <Column vertical=\"center\" className=\"fc-brownish-grey fs-15 px-2 py-1\">\r\n          New user?\r\n        </Column>\r\n        <Column\r\n          vertical=\"center\"\r\n          className=\"fc-blue br-4 b-1-blue fs-17 px-2 py-1 cursor-pointer\"\r\n          onClick={() => history.replace(\"/sign-up\")}\r\n        >\r\n          Sign Up\r\n        </Column>\r\n      </Row>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction loginComponent(props) {\r\n  return (\r\n    <Column\r\n      horizontal={\"center\"}\r\n      className=\"w-100 p-3 min-vh-100 h-100 justify-content-between\"\r\n    >\r\n      <Column className=\"w-100\">\r\n        {HeaderComponent(props)}\r\n        <Row horizontal=\"center\" className=\"w-100 my-5\">\r\n          {LoginForm(props)}\r\n        </Row>\r\n      </Column>\r\n      <Column className=\"jc-center w-100 align-items-center fs-14 my-3\">\r\n        <div className=\"fc-warm-grey\">©2019 LIMB CRE. All Rights Reserved.</div>\r\n        <div className=\"fc-blue\">Privacy Policy</div>\r\n      </Column>\r\n    </Column>\r\n  );\r\n}\r\n\r\nexport default loginComponent;\r\n","import \"react-s-alert/dist/s-alert-default.css\";\r\nimport { history } from \"../managers/history\";\r\nimport swal from \"sweetalert\";\r\nimport Cookies from \"universal-cookie\";\r\nimport React from \"react\";\r\nimport ToastService from \"react-material-toast\";\r\nimport aws from \"aws-sdk\";\r\n\r\nconst toast = ToastService.new({\r\n  place: \"topRight\",\r\n  duration: 1,\r\n  maxCount: 2,\r\n});\r\nlet moment = require(\"moment\");\r\nconst cookies = new Cookies();\r\nconst utility = {\r\n  parseResponse,\r\n  getHeader,\r\n  apiFailureToast,\r\n  apiSuccessToast,\r\n  getAddedByObject,\r\n  getCompanyObject,\r\n  generateGUID,\r\n  basicAlert,\r\n  getActivityDateEpochRange,\r\n  getMiniAwardNominationModel,\r\n  getAddress,\r\n  decodeBase64,\r\n  validationAlert,\r\n  isNumber,\r\n  trackEvent,\r\n  navigateToPath,\r\n  toggleDropDown,\r\n  validateName,\r\n  validateEmail,\r\n  validateInput,\r\n  isEmpty,\r\n  isMenuActive,\r\n  isPasswordValid,\r\n  getSignedUrl,\r\n  uploadFileToS3,\r\n  showUnderDevelopment,\r\n  epochToDate,\r\n  getDateAfterOneYear,\r\n  generateCompanyLogoKey,\r\n  dateCompare,\r\n  isCompanyBalanceLow,\r\n  getMiniUserModel,\r\n  getMiniRecognitionUserModel,\r\n  getTimeFromNow,\r\n  epocToPrettyTime,\r\n  epocToPrettyTimeForFuture,\r\n  getLeaderBoardAggregatedQuery,\r\n  getTopSenderAggregatedQuery,\r\n  getTimeDifference,\r\n  getYearsList,\r\n  getTimestampFromDate,\r\n  extractDate,\r\n  secondsToTime,\r\n  getDateFormat,\r\n  changeDateFormat,\r\n  getAggregatedPercWercQueryObject,\r\n};\r\nexport default utility;\r\n\r\nexport const dispatchAction = (type, data) => {\r\n  return (dispatch) => dispatch({ type, data });\r\n};\r\n\r\nfunction trackEvent(event, eventData) {\r\n  // try {\r\n  //     if (!eventData)\r\n  //         mixpanel.track(event);\r\n  //     else\r\n  //         mixpanel.track(event, eventData);\r\n  // } catch (err) {\r\n  //     console.log(err)\r\n  // }\r\n}\r\n\r\nfunction getDateFormat() {\r\n  var my_date = new Date(2019, 0, 31);\r\n  console.log(my_date.toLocaleDateString());\r\n  // Initialize variables\r\n  var separator = \"\";\r\n  var first = \"\";\r\n  var second = \"\";\r\n  var third = \"\";\r\n  var date_parts = [];\r\n\r\n  // get separator : \"-\", \"/\" or \" \", format based on toLocaleDateString function\r\n  if (my_date.toLocaleDateString().split(\"-\").length == 3) {\r\n    separator = \" - \";\r\n    date_parts = my_date.toLocaleDateString().split(\"-\");\r\n  }\r\n  if (my_date.toLocaleDateString().split(\"/\").length == 3) {\r\n    separator = \" / \";\r\n    date_parts = my_date.toLocaleDateString().split(\"/\");\r\n  }\r\n  if (my_date.toLocaleDateString().split(\" \").length == 3) {\r\n    separator = \" \";\r\n    date_parts = my_date.toLocaleDateString().split(\" \");\r\n  }\r\n\r\n  // get first part\r\n  if (date_parts[0] == 2019) {\r\n    first = \"YYYY\";\r\n  } else if (date_parts[0] == 31) {\r\n    first = \"DD\";\r\n  } else {\r\n    if (date_parts[0].length <= 2) {\r\n      first = \"MM\";\r\n    } else {\r\n      first = \"MMM\";\r\n    }\r\n  }\r\n\r\n  // get second part\r\n  if (date_parts[1] == 2019) {\r\n    second = \"YYYY\";\r\n  } else if (date_parts[1] == 31) {\r\n    second = \"DD\";\r\n  } else {\r\n    if (date_parts[1].length <= 2) {\r\n      second = \"MM\";\r\n    } else {\r\n      second = \"MMM\";\r\n    }\r\n  }\r\n\r\n  // get third part\r\n  if (date_parts[2] == 2019) {\r\n    third = \"YYYY\";\r\n  } else if (date_parts[2] == 31) {\r\n    third = \"DD\";\r\n  } else {\r\n    if (date_parts[2].length <= 2) {\r\n      third = \"MM\";\r\n    } else {\r\n      third = \"MMM\";\r\n    }\r\n  }\r\n  // assembly\r\n  var format = first + \"/\" + second + \"/\" + third;\r\n  return format;\r\n}\r\n\r\nfunction getHeader() {\r\n  // return {\r\n  //     'session-token': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.SESSION_TOKEN),\r\n  //     'device-id': sessionManager.getDataFromCookies(genericConstants.COOKIES_KEY.DEVICE_ID),\r\n  //     'Content-Type': httpConstants.CONTENT_TYPE.APPLICATION_JSON\r\n  // };\r\n}\r\n\r\nfunction isNumber(n) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n//TODO: update apiConstant.API_FAILURE\r\nfunction apiFailureToast(message) {\r\n  toast.error(message ? message : \"apiConstant.API_FAILURE\");\r\n}\r\nfunction parseResponse(promise) {\r\n  return promise.then(data => {\r\n      return [null, data];\r\n  }).catch(err => [err]);\r\n}\r\nfunction apiSuccessToast(msg) {\r\n  toast.success(msg ? msg : \"apiConstant.API_SUCCESS\");\r\n}\r\n\r\nfunction generateGUID() {\r\n  var nav = window.navigator;\r\n  var screen = window.screen;\r\n  var guid = nav.mimeTypes.length;\r\n  guid += nav.userAgent.replace(/\\D+/g, \"\");\r\n  guid += nav.plugins.length;\r\n  guid += screen.height || \"\";\r\n  guid += screen.width || \"\";\r\n  guid += screen.pixelDepth || \"\";\r\n  return guid;\r\n}\r\n\r\nfunction basicAlert(message) {\r\n  swal({\r\n    title: message,\r\n    icon: \"/images/alert-icon.png\",\r\n  });\r\n}\r\n\r\nfunction validationAlert(message, type = \"info\") {\r\n  swal({\r\n    title: message,\r\n    icon: type,\r\n  });\r\n}\r\n\r\nfunction getTimeDifference(timeStampTo) {\r\n  let minFive = 300000;\r\n  let oneDay = 86400000;\r\n  let difference = \"\";\r\n  let am = \" AM\";\r\n  let pm = \" PM\";\r\n  let hh = epochToDate(timeStampTo, \"hh\");\r\n  let mm = epochToDate(timeStampTo, \"mm\");\r\n  let dateFormat = epochToDate(timeStampTo, \"DD MMM YYYY\");\r\n  let hours = new Date(timeStampTo).getHours();\r\n  let timeDifference = new Date().getTime() - timeStampTo;\r\n  if (timeDifference < oneDay) {\r\n    if (timeDifference < minFive) {\r\n      difference = \"Just Now\";\r\n    } else {\r\n      if (hours < 12) difference = \"Today at \" + hh + \":\" + mm + am;\r\n      else difference = \"Today at \" + hh + \":\" + mm + pm;\r\n    }\r\n  } else {\r\n    if (hours < 12) difference = dateFormat + \", \" + hh + \":\" + mm + am;\r\n    else difference = dateFormat + \", \" + hh + \":\" + mm + pm;\r\n  }\r\n  return difference;\r\n}\r\n\r\nfunction epochToDate(timeStamp, timeFormat) {\r\n  timeStamp = Math.floor(timeStamp); //to convert to integer if seconds is String.\r\n  let dateObject = new Date(timeStamp);\r\n  return moment(dateObject).format(timeFormat); //DD MMM YYYY\r\n}\r\n\r\nfunction getTimeFromNow(timeStamp) {\r\n  return moment(timeStamp, \"YYYYMMDD\").fromNow();\r\n}\r\n// function parseResponse(promise) {\r\n//   return promise.then(data => {\r\n//       return [null, data]; \r\n//   }).catch(err => [err]);\r\n// };\r\nfunction dateCompare(timeStampFrom, timeStampTo) {\r\n  let diffTime = timeStampFrom * 1000 - timeStampTo;\r\n  let diffDays = diffTime / (1000 * 60 * 60 * 24);\r\n  return diffDays;\r\n}\r\nfunction isValidURL(str){\r\n  let regexp = /^https:\\/\\/twitter.com\\/[A-Z]*[_]*[a-z]*[_]*[A-Z]*[_]*[a-z]*[_]*[A-Z]*[a-z]*[0-9]*[_]*\\/status\\/[0-9]*$/\r\n  return regexp.test(str);\r\n}\r\nfunction getDateAfterOneYear(timeStamp) {\r\n  timeStamp = Math.floor(timeStamp); //to convert to integer if seconds is String.\r\n  let dateObject = new Date(timeStamp);\r\n  return moment(dateObject).add(1, \"years\").valueOf();\r\n}\r\n\r\nfunction getActivityDateEpochRange(activityDate) {\r\n  let currentDate = new Date();\r\n  currentDate.setHours(0, 0, 0, 0);\r\n  let startDayEpochOfCurrentWeek = moment().startOf(\"isoweek\").unix() * 1000;\r\n  let startDayEpochOfCurrentMonth = moment().startOf(\"month\").unix() * 1000;\r\n  let startDayEpochOfCurrentQuarter = moment().startOf(\"quarter\").unix() * 1000;\r\n  let startDayEpochOfCurrentYear = moment().startOf(\"year\").unix() * 1000;\r\n  let endDayEpochOfCurrentWeek = moment().endOf(\"isoweek\").unix() * 1000;\r\n  let endDayEpochOfCurrentMonth = moment().endOf(\"month\").unix() * 1000;\r\n  let endDayEpochOfCurrentQuarter = moment().endOf(\"quarter\").unix() * 1000;\r\n  let endDayEpochOfCurrentYear = moment().endOf(\"year\").unix() * 1000;\r\n  let day, start;\r\n  switch (activityDate) {\r\n    case \"Today\":\r\n      return { start: currentDate.getTime(), end: new Date().getTime() };\r\n    case \"Yesterday\":\r\n      day = new Date(currentDate);\r\n      day.setDate(currentDate.getDate() - 1);\r\n      return { start: day.getTime(), end: currentDate.getTime() };\r\n    case \"Last seven days\":\r\n      day = new Date(currentDate);\r\n      day.setDate(currentDate.getDate() - 7);\r\n      return { start: day.getTime(), end: currentDate.getTime() };\r\n    case \"Last fourteen days\":\r\n      day = new Date(currentDate);\r\n      day.setDate(currentDate.getDate() - 14);\r\n      return { start: day.getTime(), end: currentDate.getTime() };\r\n    case \"Last twenty one days\":\r\n      day = new Date(currentDate);\r\n      day.setDate(currentDate.getDate() - 21);\r\n      return { start: day.getTime(), end: currentDate.getTime() };\r\n    case \"Last Week\":\r\n      start = new Date(startDayEpochOfCurrentWeek);\r\n      start.setDate(start.getDate() - 7);\r\n      return { start: start.getTime(), end: startDayEpochOfCurrentWeek };\r\n    case \"Last two weeks\":\r\n      start = new Date(startDayEpochOfCurrentWeek);\r\n      start.setDate(start.getDate() - 14);\r\n      return { start: start.getTime(), end: startDayEpochOfCurrentWeek };\r\n    case \"Last three weeks\":\r\n      start = new Date(startDayEpochOfCurrentWeek);\r\n      start.setDate(start.getDate() - 21);\r\n      return { start: start.getTime(), end: startDayEpochOfCurrentWeek };\r\n    case \"Last Month\":\r\n      start = new Date(startDayEpochOfCurrentMonth);\r\n      start.setMonth(start.getMonth() - 1);\r\n      return { start: start.getTime(), end: startDayEpochOfCurrentMonth };\r\n    case \"Last Quarter\":\r\n      start = new Date(startDayEpochOfCurrentQuarter);\r\n      start.setMonth(start.getMonth() - 3);\r\n      return { start: start.getTime(), end: startDayEpochOfCurrentQuarter };\r\n    case \"Last Year\":\r\n      console.log(startDayEpochOfCurrentYear);\r\n      start = new Date(startDayEpochOfCurrentYear);\r\n      start.setFullYear(start.getFullYear() - 1);\r\n      return { start: start.getTime(), end: startDayEpochOfCurrentYear };\r\n    case \"This Week\":\r\n      return {\r\n        start: startDayEpochOfCurrentWeek,\r\n        end: endDayEpochOfCurrentWeek,\r\n      };\r\n    case \"This Quarter\":\r\n      return {\r\n        start: startDayEpochOfCurrentQuarter,\r\n        end: endDayEpochOfCurrentQuarter,\r\n      };\r\n    case \"This Year\":\r\n      return {\r\n        start: startDayEpochOfCurrentYear,\r\n        end: endDayEpochOfCurrentYear,\r\n      };\r\n    case \"Current Month\":\r\n      return {\r\n        start: startDayEpochOfCurrentMonth,\r\n        end: endDayEpochOfCurrentMonth,\r\n      };\r\n    default:\r\n      return { start: currentDate.getTime(), end: new Date().getTime() };\r\n  }\r\n}\r\n\r\nfunction getAddress(addressObj) {\r\n  if (\r\n    !addressObj ||\r\n    !Object.keys(addressObj).length ||\r\n    !(addressObj.addressLine1 || addressObj.poBoxNumber)\r\n  )\r\n    return \"\";\r\n  return (\r\n    <span>\r\n      {addressObj.addressLine1\r\n        ? addressObj.addressLine1\r\n        : `PO Box ${addressObj.poBoxNumber}`}\r\n      <br />\r\n      {addressObj.addressLine2 ? (\r\n        <span>\r\n          {addressObj.addressLine2}\r\n          <br />\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {addressObj.city}, {addressObj.state} {addressObj.zipCode}\r\n      <br />\r\n      {addressObj.country}\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction decodeBase64(s) {\r\n  let e = {},\r\n    i,\r\n    b = 0,\r\n    c,\r\n    x,\r\n    l = 0,\r\n    a,\r\n    r = \"\",\r\n    w = String.fromCharCode,\r\n    L = s.length;\r\n  let A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n  for (i = 0; i < 64; i++) {\r\n    e[A.charAt(i)] = i;\r\n  }\r\n  for (x = 0; x < L; x++) {\r\n    c = e[s.charAt(x)];\r\n    b = (b << 6) + c;\r\n    l += 6;\r\n    while (l >= 8) {\r\n      ((a = (b >>> (l -= 8)) & 0xff) || x < L - 2) && (r += w(a));\r\n    }\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction navigateToPath(path) {\r\n  history.push(path);\r\n}\r\n\r\nfunction toggleDropDown(dropdownID) {\r\n  // $(\"#\" + dropdownID).toggle(\"show\");\r\n}\r\n\r\nfunction validateName(name) {\r\n  let reg = /[A-Z][a-zA-Z]*/;\r\n  return reg.test(name);\r\n}\r\n\r\nfunction validateInput(input) {\r\n  let reg = /^https:\\/\\/twitter.com\\/[A-Z]*[a-z]*[0-9]*\\/status\\/[0-9]*$/;\r\n  return reg.test(input);\r\n}\r\n\r\nfunction validateEmail(email) {\r\n  let reg =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return reg.test(email);\r\n}\r\n\r\nfunction isPasswordValid(password) {\r\n  let reg = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\r\n  return reg.test(password);\r\n}\r\n\r\nfunction isEmpty(string) {\r\n  return !string || string.trim().length === 0;\r\n}\r\n\r\nfunction isMenuActive(path) {\r\n  return window.location.pathname.includes(path);\r\n}\r\n\r\nfunction getAddedByObject(propsOfComponent) {\r\n  if (\r\n    !propsOfComponent ||\r\n    !propsOfComponent.user ||\r\n    !propsOfComponent.user.userDetails\r\n  )\r\n    return null;\r\n  let user = propsOfComponent.user.userDetails;\r\n  return {\r\n    privateKey: user.privateKey,\r\n    publicKey: user.publicKey,\r\n    email: user.email,\r\n    wercPlaceID: user.wercPlaceID,\r\n    photo: user.photo ? user.photo : \"\",\r\n    designation: user.designation ? user.designation : {},\r\n    department: user.department ? user.department : {},\r\n    name:\r\n      user.firstName || user.lastName\r\n        ? user.firstName + \" \" + user.lastName\r\n        : user.company && user.company.name\r\n        ? user.company.name\r\n        : \"\",\r\n    _id: user._id,\r\n  };\r\n}\r\n\r\nfunction getMiniUserModel(user) {\r\n  if (!user) return null;\r\n  return {\r\n    privateKey: user.privateKey,\r\n    publicKey: user.publicKey,\r\n    photo: user.photo ? user.photo : \"\",\r\n    email: user.email,\r\n    wercPlaceID: user.wercPlaceID,\r\n    designation: user.designation ? user.designation : {},\r\n    department: user.department ? user.department : {},\r\n    name:\r\n      user.firstName || user.lastName\r\n        ? user.firstName + \" \" + user.lastName\r\n        : user.company.name,\r\n    _id: user._id,\r\n  };\r\n}\r\n\r\nfunction getMiniRecognitionUserModel(recognizeUser) {\r\n  if (!recognizeUser) return null;\r\n  return {\r\n    name: recognizeUser.name,\r\n    clapWeight: recognizeUser.clapWeight,\r\n    _id: recognizeUser._id,\r\n  };\r\n}\r\n\r\nfunction getMiniAwardNominationModel(nomination) {\r\n  if (!nomination) return null;\r\n  return {\r\n    name: nomination.name,\r\n    photo: nomination.photo,\r\n    _id: nomination._id,\r\n  };\r\n}\r\n\r\nfunction generateRandomAlphaNumericString(length) {\r\n  var randomAlphaNumericString = \"\";\r\n  var charset =\r\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  for (var i = 0; i < length; i++)\r\n    randomAlphaNumericString += charset.charAt(\r\n      Math.floor(Math.random() * charset.length)\r\n    );\r\n  return randomAlphaNumericString;\r\n}\r\n\r\nfunction generateCompanyLogoKey() {\r\n  var currentTimeStamp = new Date().getTime().toString();\r\n  return currentTimeStamp + \"_\" + generateRandomAlphaNumericString(13);\r\n}\r\n\r\nfunction uploadFileToS3(fileObject, fileName, mimeType, isPublic = false) {\r\n  let config = {\r\n    accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY,\r\n    secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY,\r\n  };\r\n  aws.config.update(config);\r\n  console.log(\"config\", config);\r\n  console.log(\"fileObject\", fileObject);\r\n  const S3 = new aws.S3();\r\n  const params = {\r\n    Body: fileObject,\r\n    Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\r\n    ContentType: mimeType,\r\n    Key: fileName,\r\n  };\r\n  if (isPublic) params.ACL = \"public-read\";\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    S3.upload(params, function (err, uploadData) {\r\n      if (err) reject(err);\r\n      resolve(uploadData);\r\n    });\r\n  });\r\n}\r\n\r\nfunction getSignedUrl(fileName) {\r\n  if (!fileName) return \"\";\r\n  aws.config.update({\r\n    accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY,\r\n    secretAccessKey: process.env.REACT_APP_AWS_SECRET_KEY,\r\n  });\r\n  aws.config.region = process.env.REACT_APP_AWS_S3_BUCKET_REGION;\r\n  const s3 = new aws.S3();\r\n  const params = {\r\n    Bucket: process.env.REACT_APP_AWS_S3_BUCKET_NAME,\r\n    Key: fileName ? fileName : \"\",\r\n    Expires: 600000,\r\n  };\r\n  let signedUrl = s3.getSignedUrl(\"getObject\", params);\r\n  return signedUrl;\r\n}\r\n\r\nfunction showUnderDevelopment() {\r\n  basicAlert(\"Under Development\");\r\n}\r\n\r\nfunction getCompanyObject(propsOfComponent) {\r\n  if (\r\n    !propsOfComponent ||\r\n    !propsOfComponent.user ||\r\n    !propsOfComponent.user.userDetails ||\r\n    !propsOfComponent.user.userDetails.company\r\n  )\r\n    return null;\r\n  return propsOfComponent.user.userDetails.company;\r\n}\r\n\r\nfunction isCompanyBalanceLow(company) {\r\n  if (!company || !company.tokenEconomy || !company.tokenEconomy) {\r\n    console.log(\"return false\");\r\n    return false;\r\n  }\r\n  let remainingMonth =\r\n    new Date(company.tokenEconomy.endDate).getMonth() -\r\n    new Date().getMonth() +\r\n    12 *\r\n      (new Date(company.tokenEconomy.endDate).getFullYear() -\r\n        new Date().getFullYear());\r\n  if (\r\n    company.tokenEconomy.PERCBalance <\r\n    company.tokenEconomy.monthlyPERCAllocation * remainingMonth\r\n  )\r\n    return true;\r\n  return false;\r\n}\r\n\r\nfunction getYearsList(addedOn = new Date().getTime()) {\r\n  let durationList = [];\r\n  for (\r\n    let i = new Date(addedOn).getFullYear();\r\n    i <= new Date().getFullYear();\r\n    i++\r\n  ) {\r\n    durationList.push(i);\r\n  }\r\n  return durationList;\r\n}\r\n\r\nfunction epocToPrettyTime(seconds) {\r\n  seconds = Math.floor(seconds); //to convert to integer if seconds is String.\r\n  var nowTimeMilliseconds = new Date().getTime();\r\n  var date = new Date(seconds);\r\n  var dateObject = moment(date).format(\"DD MMMM YYYY\");\r\n  //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\r\n  seconds = Math.floor(nowTimeMilliseconds / 1000 - seconds / 1000);\r\n  var interval = Math.floor(seconds / 172800);\r\n  if (interval >= 1) return dateObject;\r\n  //if (interval >= 1) return dateObject+\" \"+moment.tz(moment.tz.guess()).format('z');\r\n  interval = Math.floor(seconds / 86400);\r\n  if (interval >= 1) return \"yesterday\";\r\n\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval >= 1) {\r\n    if (interval === 1) return interval + \" hr ago\";\r\n    return interval + \" hrs ago\";\r\n  }\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval >= 1) {\r\n    if (interval === 1) return interval + \" minute ago\";\r\n    return interval + \" minutes ago\";\r\n  } else return \"Just now\";\r\n}\r\n\r\nfunction epocToPrettyTimeForFuture(seconds) {\r\n  seconds = Math.floor(seconds); //to convert to integer if seconds is String.\r\n  var nowTimeMilliseconds = new Date().getTime();\r\n  var date = new Date(seconds);\r\n  var dateObject = moment(date).format(\"DD MMMM YYYY\");\r\n  //var dateObject = moment(date).format('ddd, MMM DD hh:mm A');\r\n  seconds = Math.floor(seconds / 1000 - nowTimeMilliseconds / 1000);\r\n  var interval = Math.floor(seconds / 86400);\r\n  if (interval >= 1) return interval + \" days\";\r\n\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval >= 1) {\r\n    if (interval == 1) return interval + \" hr\";\r\n    return interval + \" hrs\";\r\n  }\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval >= 1) {\r\n    if (interval == 1) return interval + \" minute\";\r\n    return interval + \" minutes\";\r\n  } else return \"0 minute\";\r\n}\r\n\r\nfunction getLeaderBoardAggregatedQuery(\r\n  propsOfComponent,\r\n  skip = 0,\r\n  limit = 0,\r\n  matchObj = {}\r\n) {\r\n  if (\r\n    !propsOfComponent ||\r\n    !propsOfComponent.user ||\r\n    !propsOfComponent.user.userDetails ||\r\n    !propsOfComponent.user.userDetails.company\r\n  )\r\n    return null;\r\n  let queryObj = [];\r\n\r\n  //Match Object for the conditions-\r\n  let feedType = [];\r\n  feedType.push({ \"entityData.feedType\": \"ADD_RECOGNITION\" });\r\n  feedType.push({ \"entityData.feedType\": \"ADD_NOMINATION\" });\r\n  matchObj[\"$or\"] = feedType;\r\n  matchObj[\"entityData.company.id\"] =\r\n    propsOfComponent.user.userDetails.company.id;\r\n\r\n  //addField Object for the conditions-\r\n  let addFieldObj = {\r\n    recipient: {\r\n      $arrayToObject: {\r\n        $map: {\r\n          input: \"$entityData.recipients\",\r\n          as: \"recipients\",\r\n          in: { k: \"userDetails\", v: \"$$recipients\" },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  //Group object for grouping-\r\n  let groupObj = {};\r\n  groupObj._id = \"$entityData.recipients._id\";\r\n  groupObj.PERCBalance = { $sum: \"$entityData.PERCValue\" };\r\n  groupObj.firstName = { $first: \"$entityData.recipients.name\" };\r\n\r\n  queryObj.push({ $match: matchObj });\r\n  // queryObj.push({\"$addFields\": addFieldObj});\r\n  queryObj.push({ $group: groupObj });\r\n  queryObj.push({ $sort: { PERCBalance: -1 } });\r\n  queryObj.push({ $limit: limit });\r\n  queryObj.push({ $skip: skip });\r\n\r\n  return queryObj;\r\n}\r\n\r\nfunction getTopSenderAggregatedQuery(\r\n  propsOfComponent,\r\n  skip = 0,\r\n  limit = 0,\r\n  matchObj = {}\r\n) {\r\n  if (\r\n    !propsOfComponent ||\r\n    !propsOfComponent.user ||\r\n    !propsOfComponent.user.userDetails ||\r\n    !propsOfComponent.user.userDetails.company\r\n  )\r\n    return null;\r\n  let queryObj = [];\r\n\r\n  //Match Object for the conditions-\r\n  let feedType = [];\r\n  feedType.push({ \"entityData.feedType\": \"ADD_RECOGNITION\" });\r\n  feedType.push({ \"entityData.feedType\": \"ADD_NOMINATION\" });\r\n  matchObj[\"$or\"] = feedType;\r\n  matchObj[\"entityData.company.id\"] =\r\n    propsOfComponent.user.userDetails.company.id;\r\n\r\n  //Group object for grouping-\r\n  let groupObj = {};\r\n  groupObj._id = \"$entityData.addedBy.email\";\r\n  groupObj.PERCBalance = { $sum: \"$entityData.PERCValue\" };\r\n  groupObj.firstName = { $first: \"$entityData.addedBy.name\" };\r\n\r\n  //Group object for grouping-\r\n  let sortObj = {};\r\n  sortObj._id = \"$recipient.userDetails.email\";\r\n\r\n  queryObj.push({ $match: matchObj });\r\n  queryObj.push({ $group: groupObj });\r\n\r\n  // queryObj.push({\"$sort\": {'PERCBalance':-1}});\r\n\r\n  queryObj.push({ $limit: limit });\r\n  queryObj.push({ $skip: skip });\r\n  queryObj.push({ $sort: { PERCBalance: -1 } });\r\n\r\n  return queryObj;\r\n}\r\n\r\nfunction secondsToTime(milliseconds) {\r\n  let date = new Date(milliseconds);\r\n  var duration = moment.duration(milliseconds, \"milliseconds\");\r\n  return duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds();\r\n  let dateObject = moment(date, \"hh:mm:ss\").fromNow();\r\n  return dateObject;\r\n\r\n  // let hours = Math.floor(secs / (60 * 60));\r\n  //\r\n  // let divisor_for_minutes = secs % (60 * 60);\r\n  // let minutes = Math.floor(divisor_for_minutes / 60);\r\n  //\r\n  // let divisor_for_seconds = divisor_for_minutes % 60;\r\n  // let seconds = Math.ceil(divisor_for_seconds);\r\n  //\r\n  // let obj = {\r\n  //     \"h\": hours,\r\n  //     \"m\": minutes,\r\n  //     \"s\": seconds\r\n  // };\r\n  // return obj;\r\n}\r\n\r\nfunction getTimestampFromDate(year, month, date = 0) {\r\n  let days = new Date(year, month, date).getDate();\r\n  return new Date(year + \"/\" + month + \"/\" + days).getTime();\r\n}\r\n\r\nfunction extractDate(date, getType) {\r\n  console.log(\"date\", typeof date, \"getType\", getType);\r\n  switch (getType) {\r\n    case \"DAY\":\r\n      return new Date(date.toString()).getDate();\r\n      break;\r\n    case \"MONTH\":\r\n      return new Date(date.toString()).getMonth() + 1;\r\n      break;\r\n    case \"YEAR\":\r\n      return new Date(date.toString()).getFullYear();\r\n      break;\r\n    default:\r\n      return date;\r\n  }\r\n}\r\n\r\nfunction changeDateFormat(date, newFormat) {\r\n  let currentFormat = getDateFormat();\r\n  return moment(date, currentFormat).format(newFormat);\r\n}\r\n\r\nfunction getAggregatedPercWercQueryObject(start, end, skip, id) {\r\n  console.log(start, end, skip, id);\r\n  return [\r\n    {\r\n      $match: {\r\n        $and: [\r\n          {\r\n            date: {\r\n              $gte: start.toString(),\r\n            },\r\n          },\r\n          {\r\n            date: {\r\n              $lte: end.toString(),\r\n            },\r\n          },\r\n        ],\r\n        companyId: id.toString(),\r\n      },\r\n    },\r\n    {\r\n      $skip: skip,\r\n    },\r\n  ];\r\n}\r\n","import React from 'react'\r\nimport {Column, Row} from \"simple-flexbox\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport CustomInput from \"../../common/components/CustomInput\";\r\nimport {history} from \"../../managers/history\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\n\r\n\r\nfunction SubscriptionTypeComponent(props) {\r\n    return (\r\n        <div\r\n            className=\"p-3 cursor-pointer fc-dark-slate-blue text-center m-3 w-250 bg-white b-1-white subscription-plan-card-shadow z-index-100 br-4\">\r\n            <div className=\"fs-20 font-weight-bold\">Loan Seller</div>\r\n            <div className=\"fs-15 my-3\">Create, transfer, sell and\r\n                publish Loan Data Records\r\n                on Blockchain\r\n            </div>\r\n            <img/>\r\n            <Button className=\"my-3 bg-blue px-2 fc-white fs-17 outline-none text-transform-capitalize\">\r\n                Buy this plan\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SubscriptionPlanComponent(props) {\r\n    let {state, togglePassword, onChangeEvent, onLoginClicked} = props;\r\n    return (\r\n        <Column className=\"align-items-center my-5\" horizontal={'center'}>\r\n            <div className=\"w-100 fs-28 text-center fc-dark-slate-blue\">\r\n                LIMB CRE Plans for your Business\r\n            </div>\r\n            <div className=\"w-100 fs-20 text-center fc-dusky-blue\">\r\n                Select a plan to match your company type\r\n            </div>\r\n            <Row className=\"mt-4\">\r\n                {SubscriptionTypeComponent(props)}\r\n                {SubscriptionTypeComponent(props)}\r\n                {SubscriptionTypeComponent(props)}\r\n                {SubscriptionTypeComponent(props)}\r\n            </Row>\r\n        </Column>\r\n    );\r\n}\r\n\r\nfunction SignUpForm(props) {\r\n    let {state, togglePassword, onChangeEvent, onLoginClicked} = props;\r\n    return (\r\n        <Column className=\"w-450 pl-5 ml-3 border-left py-3 my-3 align-items-center fc-dark-slate-blue\"\r\n                horizontal={'center'}>\r\n            <form onSubmit={onLoginClicked} className=\"w-100\">\r\n\r\n                <label className=\"text-left w-100 fs-20\"><span\r\n                    className='font-weight-bold'>Create your account</span> (all field required)</label>\r\n\r\n                <div className=\"fs-15 mt-3 font-weight-bold\">Full Name</div>\r\n                <CustomInput id=\"name\" type=\"text\" value={state ? state.name : \"\"} onChange={onChangeEvent}\r\n                             error={state ? state.nameError : \"\"} className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <div className=\"fs-15 mt-2 font-weight-bold \">Email Address</div>\r\n                <CustomInput id=\"email\" type=\"text\" value={state ? state.email : \"\"} onChange={onChangeEvent}\r\n                             error={state ? state.emailError : \"\"} className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Row className=\"fs-15 mt-2 font-weight-bold\">Password</Row>\r\n                <CustomInput id=\"password\" type={\"password\"} value={state ? state.password : \"\"}\r\n                             onChange={onChangeEvent} error={state ? state.passwordError : \"\"}\r\n                             className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Row className=\"fs-15 mt-2 font-weight-bold\">Confirm Password</Row>\r\n                <CustomInput id=\"confirmPassword\" type={\"password\"} value={state ? state.confirmPassword : \"\"}\r\n                             onChange={onChangeEvent} error={state ? state.confirmPasswordError : \"\"}\r\n                             className=\"fs-15 p-2 mt-1\"/>\r\n\r\n                <Button type='submit' className=\"bg-blue outline-none text-transform-capitalize\r\n                fc-white w-100 py-2 fs-17 mt-4 cursor-pointer\">\r\n                    Continue\r\n                </Button>\r\n                <div className=\"w-100 text-left fs-15 my-1\">By clicking on continue, you agree to the LIMB CRE\r\n                    <a className=\"fc-blue\"> Terms of Service </a>\r\n                    and <a className=\"fc-blue\">Privacy Policy.</a>\r\n                </div>\r\n            </form>\r\n        </Column>\r\n    );\r\n}\r\n\r\nfunction SelectedSubscriptionComponent(props) {\r\n    return (\r\n        <div\r\n            className=\"p-3 mx-3 cursor-pointer fc-dark-slate-blue text-center m-3 w-250 bg-white\">\r\n            <div className=\"fs-20 font-weight-bold\">Loan Seller</div>\r\n            <div className=\"fs-15 my-3\">Create, transfer, sell and\r\n                publish Loan Data Records\r\n                on Blockchain\r\n            </div>\r\n            <img/>\r\n            <Button className=\"my-3 bg-blue px-2 fc-white fs-17 outline-none text-transform-capitalize\">\r\n                Buy this plan\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SignUpComponent(props) {\r\n    let {state, togglePassword, onChangeEvent, onLoginClicked} = props;\r\n    return (\r\n        <Row className=\"align-items-center my-5\" horizontal={'center'}>\r\n            {SelectedSubscriptionComponent(props)}\r\n            {SignUpForm(props)}\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction HeaderComponent(props) {\r\n    return (\r\n        <Row vertical=\"center\" className=\"justify-content-between w-100\">\r\n            <img src=\"/images/limb_logo.svg\" alt='limb' className=\"w-150\"/>\r\n            <Row vertical=\"center\">\r\n                <Column vertical=\"center\" className=\"fc-brownish-grey fs-15 px-2 py-1\">Existing user?</Column>\r\n                <Column vertical=\"center\" className=\"fc-blue br-4 b-1-blue fs-17 px-2 py-1 cursor-pointer\"\r\n                        onClick={() => history.replace(\"/\")}>\r\n\r\n                    Log in</Column>\r\n            </Row>\r\n        </Row>\r\n    )\r\n}\r\n\r\nfunction signUpComponent(props) {\r\n    return (\r\n        <Column horizontal={'center'} className=\"w-100 p-3 min-vh-100\">\r\n            {HeaderComponent(props)}\r\n            {/*{SubscriptionPlanComponent(props)}*/}\r\n            {SignUpComponent(props)}\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default signUpComponent;","import styled, { css } from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #191d43;\r\n`;\r\nconst Image = styled.img`\r\n  padding: 10px;\r\n  margin-left: 45px;\r\n  width: 57px;\r\n  margin-top: 3px;\r\n`;\r\nconst MobileImage = styled.img`\r\n  padding: 10px;\r\n  margin-left: 12px;\r\n  width: 57px;\r\n  margin-top: 3px;\r\n`;\r\nconst Span = styled.span`\r\n  color: #ffffff;\r\n  font-size: 19px;\r\n  margin-top: 21px;\r\n  font-weight: 600;\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  margin-left: -11px;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.19;\r\n`;\r\nconst Input = styled.input`\r\n  background-color: #3d4270;\r\n  border-radius: 4px;\r\n  font-family: WorkSans-Roman !important;\r\n  color: #ffffff;\r\n  border: none;\r\n  height: 32px;\r\n  width: 40%;\r\n  margin-left: 33px;\r\n  margin-top: 18px;\r\n`;\r\nconst Button = styled.button`\r\n  color: #ffffff;\r\n  height: 32px;\r\n\r\n  width: 96px;\r\n  padding: 10px;\r\n  margin-top: 18px;\r\n  margin-left: 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #5760bc;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 0.28;\r\n  font-family: \"IBM Plex Sans\", sans-serif !important;\r\n`;\r\nconst DesktopView = styled.div`\r\n@media (min-width: 0px) and (max-width: 767px) {\r\n display: none;\r\n}\r\n@media (min-width: 768px) {\r\n  display: visible;\r\n}\r\n`;\r\n\r\n\r\nconst MobileView = styled.div`\r\n@media (min-width: 0px) and (max-width: 767px) {\r\n  display: visible;\r\n}\r\n@media (min-width: 768px) {\r\n  display: none;\r\n}\r\n`;\r\nexport default function HeaderComponent(props) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  return (\r\n    <>\r\n      <DesktopView>\r\n        <Container>\r\n          <Row>\r\n            <Image src=\"/images/tweetarchive.svg\" />\r\n            <Span>TweetArchive</Span>\r\n\r\n            <Input\r\n              type=\"text\"\r\n              readOnly={true}\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n            />\r\n            <CopyToClipboard text={inputValue}>\r\n              <Button>Copy</Button>\r\n            </CopyToClipboard>\r\n          </Row>\r\n        </Container>\r\n      </DesktopView>\r\n\r\n      <MobileView>\r\n        <Container>\r\n          <Row>\r\n            <MobileImage src=\"/images/tweetarchive.svg\" />\r\n            <Span>TweetArchive</Span>\r\n          </Row>\r\n          <Column style={{ paddingBottom: '20px' }}>\r\n            <Row>\r\n              <Input\r\n                type=\"text\"\r\n                readOnly={true}\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n              />\r\n              <CopyToClipboard text={inputValue}>\r\n                <Button>Copy</Button>\r\n              </CopyToClipboard>\r\n            </Row>\r\n          </Column>\r\n        </Container>\r\n      </MobileView>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nconst PopUpcontainer = styled.div``;\r\n\r\nconst Span = styled.span`\r\n  background-color: #10ca93;\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  line-height: 1.19;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #ffffff;\r\n`;\r\nconst Image = styled.img`\r\n  width: 25px;\r\n  margin-right: 9px;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  width: 250px;\r\n  height: 60px;\r\n  border-radius: 4px;\r\n  background-color: #10ca93;\r\n  padding: 16px;\r\n`;\r\nexport default function Popup() {\r\n  return (\r\n    <PopUpcontainer>\r\n      <Row>\r\n        <Div>\r\n          <Image src=\"/images/tickicon.svg\" />\r\n          <Span>Your tweet has been archived</Span>\r\n        </Div>\r\n      </Row>\r\n    </PopUpcontainer>\r\n  );\r\n}\r\n","import React, {useState,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport Popup from \"../popupbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport '../../assets/styles/custom.css';\r\n\r\nconst Container = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  width: 514px;\r\n  height: 578px;\r\n  background-color: #ffffff;\r\n  border: solid 1px #aab1ff;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Heading = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 15px;\r\n  border: solid 0.5px #e8e8e8;\r\n  padding-top: 2%;\r\n  padding-left: 7%;\r\n  width: 514px;\r\n`;\r\nconst Tweetdata = styled.span`\r\n  justify-content: center;\r\n  display: flex;\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  padding: 7%;\r\n  height: 400px;\r\n`;\r\nconst Name = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 15px;\r\n  margin-top: 4%;\r\n  margin-left: 1%;\r\n`;\r\nconst Email = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 10px;\r\n  margin-top: -4%;\r\n  margin-left: 13%;\r\n`;\r\nconst Time = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst QuoteTweet = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst QuoteTweetcount = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Likes = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Date = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Twitterwebapp = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Retweets = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Retweetscount = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Likescount = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 13px;\r\n`;\r\nconst Like = styled.span`\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  font-size: 10px;\r\n`;\r\nconst Details = styled.div`\r\n  border: solid 0.5px #e8e8e8;\r\n  width: 514px;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    marginTop: \"4%\",\r\n    marginLeft: \"4%\",\r\n  },\r\n  maingrid: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: \"12%\",\r\n  },\r\n  popupgrid: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"16px\",\r\n  },\r\n}));\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation()\r\n  const url = location.search.slice(5)\r\n\r\n\r\n  // const [count, setCount] = useState({});\r\n  // alert(JSON.stringify(location.state))\r\n  // useEffect(() => {\r\n  //   fetchCount();\r\n  // }, []);\r\n  // const fetchCount = () => {\r\n  //   axios({\r\n  //     url:  \"https://ki3l56sayb.execute-api.us-east-2.amazonaws.com/xinfin-twitter-gettweetsfromtweeturl?url=https://twitter.com/MichalStein2/status/1404839937908875264\",\r\n      // method: \"POST\",\r\n      // mode: 'no-cors',\r\n      // headers: {\r\n      //   \"Content-Type\": \"application/json\",\r\n      //   \"Access-Control-Allow-Origin\": process.env.REACT_APP_API_URL,\r\n      //   \"Access-Control-Request-Headers\": 'Content-Type, Authorization',\r\n      //   \"Content-Security-Policy\": 'frame-ancestors self'\r\n      // }\r\n  //   })\r\n\r\n  //     .then((res) => {\r\n  //       console.log(\"result-------\", res)\r\n  //       setCount(res);\r\n\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"err-------\", err);\r\n  //     });\r\n  // };\r\n\r\n  const [count, setCount] = useState({});\r\n  useEffect(() => {\r\n    fetchCount();\r\n  }, []);\r\n  const fetchCount = () => {\r\n    axios\r\n      .get(\r\n        \"https://ki3l56sayb.execute-api.us-east-2.amazonaws.com/xinfin-twitter-gettweetsfromtweeturl?url=\"+url\r\n        )\r\n      .then((res) => {\r\n        setCount(res.data.responseData.responseData);\r\n        console.log(\"tweets----\", res.data.responseData.responseData)\r\n        console.log('link---',url)\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error-----\",err);\r\n      });\r\n  };\r\n\r\nlet value=count?.data\r\n// let handler = value?.length\r\n// console.log('hand---',handler)\r\n\r\n  return (\r\n    <>\r\n      <Grid xs={12}>\r\n        <Row>\r\n          <Grid xs={8} className={classes.maingrid}>\r\n            <Container>\r\n            {/* <div className=\"loader\"></div> */}\r\n            <Column>\r\n                <Row>\r\n                  <Heading> ARCHIVE TWEET</Heading>\r\n                  <br /> \r\n                  <br />\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Avatar className={classes.avatar}>H</Avatar>\r\n                  <Name>{value?.name}</Name>\r\n                </Row>\r\n\r\n                <Email>@{value?.name}</Email>\r\n\r\n                <br />\r\n                <Row>\r\n                  <Tweetdata>\r\n                   {/* {value} */}\r\n                    <br />\r\n                    <br />\r\n                   {value?.text}\r\n                    <br />\r\n                    <br />\r\n                  </Tweetdata>\r\n                </Row>\r\n                <Row>\r\n                  <Details>\r\n                    <Time> &nbsp;&nbsp;&nbsp;&nbsp;12:28 AM&emsp;.</Time>\r\n                    <Date>&nbsp;May 12,2021&emsp;.</Date>\r\n                    <Twitterwebapp>&nbsp;Twitter Web App&nbsp;.</Twitterwebapp>\r\n                  </Details>\r\n                </Row>\r\n                <Row>\r\n                  <Retweetscount>\r\n                    {\" \"}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; 13&emsp;\r\n                  </Retweetscount>\r\n                  <Retweets>Retweets&emsp;</Retweets>\r\n                  <QuoteTweetcount> &nbsp; 3&nbsp;</QuoteTweetcount>\r\n                  <QuoteTweet>Quote Tweets&emsp;</QuoteTweet>\r\n                  <Likescount> &nbsp; 139 &nbsp;</Likescount>\r\n                  <Likes>Likes&emsp;</Likes>\r\n                </Row>\r\n              </Column>\r\n            \r\n            </Container>\r\n          </Grid>\r\n          <Grid xs={4} className={classes.popupgrid}>\r\n            {/* <Popup /> */}\r\n          </Grid>\r\n        </Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Footer = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  background-color: #ffffff;\r\n`;\r\nconst Poweredheading = styled.span`\r\n  font-size: 13px;\r\n  color: #09184b;\r\n  margin-bottom: 8%;\r\n  // font-family: \"Raleway\", sans-serif !important;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.15;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #09184b;\r\n`;\r\nconst Xinfin = styled.span`\r\n  color: #4d84fb;\r\n  font-size: 13px;\r\n  margin-top: -3px;\r\n`;\r\nconst Year = styled.span`\r\n  color: #09184b;\r\n  font-size: 13px;\r\n  justify-content: center;\r\n  display: flex;\r\n  margin-bottom: 70%;\r\n  // font-family: \"Raleway\", sans-serif !important;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.15;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #09184b;\r\n`;\r\n\r\nexport default function FooterComponent() {\r\n  return (\r\n    <Footer>\r\n      <Row>\r\n        <Column>\r\n          <Row>\r\n            <Poweredheading>Powered By &nbsp; </Poweredheading>\r\n            <Xinfin>Xinfin</Xinfin>\r\n          </Row>\r\n\r\n          <Year> &copy; 2021</Year>\r\n        </Column>\r\n      </Row>\r\n    </Footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BaseComponent from \"../baseComponent\";\r\nimport HeaderComponent from \"../Header/header\";\r\nimport MainComponent from \"./mainComponent\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport FooterComponent from \"../Footer/footer\";\r\n\r\nexport default class CardComponent extends BaseComponent {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Column>\r\n          <HeaderComponent />\r\n          <MainComponent />\r\n          {/* <FooterComponent /> */}\r\n        </Column>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../Header\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-flow: row wrap;\r\n`;\r\nconst Enterlink = styled.span`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  letter-spacing: normal;\r\n  font-family: \"Raleway\", sans-serif !important;\r\n\r\n  line-height: 1.16;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #09184b;\r\n`;\r\nconst Input = styled.input`\r\n  border-radius: 4px;\r\n  margin-left: 23%;\r\n  margin-top: 3%;\r\n  background: url(/images/search.svg) no-repeat 20px;\r\n\r\n  border: solid 1px #aab1ff;\r\n  padding-left: 50px;\r\n  justify-content: center;\r\n  flex-flow: row wrap;\r\n  width: 50%;\r\n`;\r\nconst Searchicon = styled.img`\r\n  position: absolute;\r\n  top: 46%;\r\n  left: 27%;\r\n  //  @media (max-width: 767px) {\r\n  //   position: absolute;\r\n  //   top: 203px;\r\n\r\n  //   margin-left: 186px;\r\n  // }\r\n\r\n  // @media (max-width: 980px) {\r\n  //   margin-left: 24%;\r\n  // }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #3366ff;\r\n  border-radius: 4px;\r\n  height: 41px;\r\n  justify-content: center;\r\n  margin-top: 3%;\r\n  color: #ffffff;\r\n  border: none;\r\n  width: 92px;\r\n\r\n  font-size: 15px;\r\n  flex-flow: row wrap;\r\n\r\n  margin-left: 10px;\r\n  @media (max-width: 767px) {\r\n    margin-right: 100px;\r\n\r\n    justify-content: center;\r\n  }\r\n`;\r\nconst Card = styled.img`\r\n  border: none;\r\n  padding: 90px;\r\n  width: 100%;\r\n`;\r\nconst Span = styled.span`\r\n  font-size: 14px;\r\n  margin-right: 144px;\r\n\r\n  // @media (max-width: 1492px) {\r\n  //   margin-right: 199px;\r\n  // }\r\n  @media (max-width: 980px) {\r\n    font-size: 14px;\r\n    margin-right: 2px;\r\n  }\r\n`;\r\nconst Span1 = styled.span`\r\n  font-size: 14px;\r\n  margin-right: 144px;\r\n color:red;\r\n  // @media (max-width: 767px) {\r\n  //   margin-left: 58%;\r\n  // }\r\n  @media (max-width: 980px) {\r\n    font-size: 14px;\r\n    margin-right: 2px;\r\n  }\r\n`;\r\nconst Cardcontainer = styled.div``;\r\nconst Heading = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  font-stretch: normal;\r\n  color: #09184b;\r\n  text-align: center;\r\n  margin-top: -19%;\r\n  line-height: 3.17;\r\n`;\r\nconst SubHeading = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.57;\r\n  letter-spacing: normal;\r\n  color: #09184b;\r\n  text-align: center;\r\n`;\r\nconst Container_one = styled.div``;\r\nconst Container_two = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst Container_three = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst Rowcontainer = styled.div`\r\n  display: flex;\r\n  // flex-flow: row wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\nconst Subheadingdiv = styled.div``;\r\n\r\nexport default function TweetLink(props) {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Column>\r\n          <Enterlink>Enter Tweet Link</Enterlink>\r\n\r\n          <Row>\r\n            <Input \r\n            id=\"tweetLink\" \r\n            type=\"text\" \r\n            name=\"tweetLink\"\r\n            value={props.state.tweetLink}\r\n            onChange={props.tweetLinkHandler} />\r\n\r\n            <Button onClick={props.onSaveTweetClicked }>\r\n              Archive\r\n            </Button>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Tweetdiv>\r\n              {props.state.errorValidation && <Span1>{props.state.errorValidation}</Span1>}\r\n              <Span>20,000 tweets have been archived</Span>\r\n            </Tweetdiv>\r\n          </Row>\r\n          <Cardcontainer>\r\n            <Row>\r\n              <Rowcontainer>\r\n                <Container_one>\r\n                  <Column>\r\n                    <Card src=\"/images/Fake.svg\" />\r\n                    <Heading>Stop Fake News</Heading>\r\n\r\n                    <SubHeading>\r\n                      Help in making the world better-informed by stopping fake\r\n                      news\r\n                    </SubHeading>\r\n                  </Column>\r\n                </Container_one>\r\n                <Container_two>\r\n                  <Column>\r\n                    <Card src=\"/images/newarchive.svg\" />\r\n                    <Heading>Archive your Tweets</Heading>\r\n                    <SubHeading>\r\n                      Archive your tweets in our platform so that it stays\r\n                      forever\r\n                    </SubHeading>\r\n                  </Column>\r\n                </Container_two>\r\n                <Container_three>\r\n                  <Column>\r\n                    <Card src=\"/images/Legalnews.svg\" />\r\n\r\n                    <Heading>Save links for legal actions</Heading>\r\n                    <SubHeading>\r\n                      Use your saved links for the future legal actions\r\n                    </SubHeading>\r\n                  </Column>\r\n                </Container_three>\r\n              </Rowcontainer>\r\n            </Row>\r\n          </Cardcontainer>\r\n        </Column>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Tweetdiv = styled.div`\r\n  right: 162px;\r\n  position: absolute;\r\n\r\n  @media (max-width: 767px) {\r\n    right: 104px;\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\n// Mobile screen sizes 767 pixels and below i.e. max-width: 767px\r\n// \tTablet screen sizes between 980 pixels and 768 pixels i.e. min-width:768px and max-width: 980px\r\n// \tDesktop screen sizes of 981 pixels and above i.e. min-width: 981px\r\n","import styled, { css } from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    // background: \"url(/images/search.svg) no-repeat 15px\",\r\n    border: \"solid 1px #aab1ff\",\r\n    width: \"100%\",\r\n    height: \"40px\",\r\n    marginRight: \"7px\",\r\n    color: \"#09184b\",\r\n    marginTop: \"-9px\",\r\n    backgroundSize: \"25px\",\r\n    paddingLeft: \"8%\",\r\n  },\r\n  // \"@media (min-width: 400px) and (max-width: 1080px)\": {\r\n  //   input: {\r\n  //     display: \"flex !important\",\r\n  //     width: \"201px\",\r\n  //     height: \"33px\",\r\n  //     justifyContent: \"center\",\r\n  //     alignItems: \"center\",\r\n  //   },\r\n  // },\r\n  button: {\r\n    backgroundColor: \" #3366ff\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff\",\r\n    paddingLeft: '15px',\r\n    paddingRight: '15px',\r\n    border: \"none\",\r\n    fontSize: \"15px\",\r\n    marginTop: \"-9px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.17\",\r\n    letterSpacing: \"normal\",\r\n    textAlign: \"center\",\r\n  },\r\n  span: {\r\n    marginTop: \"16px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    fontSize: \"18px\",\r\n    display: \"flex\",\r\n  },\r\n  no_of_tweets_archived: {\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    marginRight: \"4px\",\r\n  },\r\n}));\r\n\r\nconst DesktopView = styled.div`\r\n@media (min-width: 0px) and (max-width: 767px) {\r\n display: none;\r\n}\r\n@media (min-width: 768px) {\r\n  display: visible;\r\n}\r\n`;\r\n\r\n\r\nconst MobileView = styled.div`\r\n@media (min-width: 0px) and (max-width: 767px) {\r\n  display: visible;\r\n}\r\n@media (min-width: 768px) {\r\n  display: none;\r\n}\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #191d43;\r\n`;\r\nconst Image = styled.img`\r\n  padding: 10px;\r\n  margin-left: 45px;\r\n  width: 57px;\r\n  margin-top: 3px;\r\n`;\r\nconst MobileImage = styled.img`\r\n  padding: 10px;\r\n  margin-left: -10px;\r\n  width: 57px;\r\n  margin-top: 3px;\r\n`;\r\nconst Span = styled.span`\r\n  color: #ffffff;\r\n  font-size: 19px;\r\n  margin-top: 21px;\r\n  font-weight: 600;\r\n  font-family: \"Raleway\", sans-serif !important;\r\n  margin-left: -11px;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.19;\r\n`;\r\n\r\n\r\nexport default function Headerconditional() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <DesktopView>\r\n        <Container>\r\n          <Row>\r\n            <Image src=\"/images/tweetarchive.svg\" />\r\n            <Span>TweetArchive</Span>\r\n          </Row>\r\n        </Container>\r\n      </DesktopView>\r\n\r\n      <MobileView>\r\n        <Container>\r\n          <Grid item xs={12}>\r\n            <Row>\r\n              <MobileImage src=\"/images/tweetarchive.svg\" />\r\n              <Span>TweetArchive</Span>\r\n            </Row>\r\n            <Column style={{ color: 'white' }}>\r\n\r\n            </Column>\r\n            <Column style={{ color: 'white', marginTop: '15px' }}>\r\n              <Row>\r\n                <input className={classes.input} type=\"text\" />\r\n                <button className={classes.button} >\r\n                  Archive\r\n                </button>\r\n              </Row>\r\n            </Column>\r\n\r\n            <Column style={{ color: 'white' }}>\r\n              <Row>\r\n                <div className={classes.span}>\r\n                  <span className={classes.no_of_tweets_archived}>\r\n                    20,000 tweets have been archived\r\n                  </span>\r\n                \r\n                </div>\r\n              </Row>\r\n            </Column>\r\n\r\n          </Grid>\r\n        </Container>\r\n      </MobileView>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport MainComponent from \"../modules/MainComponent/mainComponent\";\r\n\r\nimport Popup from \"../modules/popupbox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n    fontFamily: \"Raleway, sans-serif !important\",\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: \"6%\",\r\n    paddingBottom: \"11%\",\r\n  },\r\n\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    boxShadow: \"none !important\",\r\n    outline: \"none !important\",\r\n  },\r\n  cardMedia: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"56.25%\",\r\n    alignItems: \"center\",\r\n    width: \"72%\",\r\n    boxShadow: \"none\",\r\n    cursor: \"none\",\r\n    marginLeft: \"14%\",\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    outline: \"none !important\",\r\n    border: \"none !important\",\r\n    boxShadow: \"none\",\r\n  },\r\n\r\n  input: {\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    background: \"url(/images/search.svg) no-repeat 15px\",\r\n    border: \"solid 1px #aab1ff\",\r\n    width: \"545px\",\r\n    height: \"40px\",\r\n    marginRight: \"7px\",\r\n    color: \"#09184b\",\r\n    marginTop: \"-9px\",\r\n    backgroundSize: \"25px\",\r\n    paddingLeft: \"8%\",\r\n  },\r\n  // \"@media (min-width: 400px) and (max-width: 1080px)\": {\r\n  //   input: {\r\n  //     display: \"flex !important\",\r\n  //     width: \"201px\",\r\n  //     height: \"33px\",\r\n  //     justifyContent: \"center\",\r\n  //     alignItems: \"center\",\r\n  //   },\r\n  // },\r\n  button: {\r\n    backgroundColor: \" #3366ff\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff\",\r\n    border: \"none\",\r\n    fontSize: \"15px\",\r\n    width: \"115px\",\r\n    marginTop: \"-9px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.17\",\r\n    letterSpacing: \"normal\",\r\n    textAlign: \"center\",\r\n  },\r\n  span: {\r\n    marginTop: \"16px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    fontSize: \"12px\",\r\n    display: \"flex\",\r\n  },\r\n  no_of_tweets_archived: {\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    marginRight: \"4px\",\r\n  },\r\n  main: {\r\n    backgroundColor: \"#ffffff\",\r\n    marginBottom: \"11%\",\r\n  },\r\n  cardactionarea: {\r\n    display: \"grid\",\r\n  },\r\n  heading: {\r\n    fontSize: \"15px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    fontWeight: \"500\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.17\",\r\n    letterSpacing: \"normal\",\r\n    textAlign: \"center\",\r\n    color: \"#09184b\",\r\n    marginTop: \"5%\",\r\n    marginBottom: \"4%\",\r\n  },\r\n  subheading: {\r\n    fontSize: \"13px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n  },\r\n  enterTweetLink: {\r\n    marginTop: \"-25px\",\r\n    fontSize: \"28px\",\r\n    fontFamily: \"Raleway,sans-serif !important\",\r\n    textAlign: \"center\",\r\n  },\r\n  maindiv: {\r\n    paddingTop: \"8%\",\r\n  },\r\n  container: {\r\n    paddingBottom: \"4%\",\r\n  },\r\n  Container: {\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  main: {\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  allImagesdiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  stopfakenews: {\r\n    marginTop: \"-23px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nconst TextView = styled.div`\r\n@media (min-width: 0px) and (max-width: 767px) {\r\n  display: none;\r\n}\r\n@media (min-width: 768px) {\r\n  display: visible;\r\n}\r\n`;\r\nconst MobileView = styled.div`\r\n@media (min-width: 0px) and (max-width: 767px) {\r\n  margin-top: 10%;\r\n}\r\n`;\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [tweet, setTweet] = useState(\"\");\r\n\r\n  const redirect = () => {\r\n    var urlRegex = /^http[s]?:\\/\\/(www\\.)?(.*)?\\/?(.)*/\r\n    if (urlRegex.test(tweet) && tweet.includes('twitter.com/') && tweet.includes('status/')) {\r\n      history.push(\"/archive?url=\" + tweet);\r\n    }\r\n    else {\r\n      alert(\"Enter Correct URL\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <main className={classes.main}>\r\n\r\n        <TextView>\r\n          <div className={classes.heroContent}>\r\n            <Container className={classes.Container} maxWidth=\"sm\">\r\n              <Typography className={classes.enterTweetLink}>\r\n                Enter Tweet Link\r\n              </Typography>\r\n\r\n              <div className={classes.heroButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                  <Grid item>\r\n                    <Row>\r\n                      <input className={classes.input} type=\"text\" onChange={e => setTweet(e.target.value)} />\r\n                      <button className={classes.button} onClick={redirect}>\r\n                        Archive\r\n                      </button>\r\n                    </Row>\r\n\r\n                    <div\r\n                      style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                    >\r\n                      <div className={classes.span}>\r\n                        <span className={classes.no_of_tweets_archived}>\r\n                          20,000\r\n                        </span>\r\n                        tweets have been archived\r\n                      </div>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n          </TextView>\r\n\r\n        <MobileView>\r\n          <Container className={classes.cardGrid} fixed>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} md={4}>\r\n                <Paper className={classes.paper}>\r\n                  <div className={classes.cardactionarea}>\r\n                    <div className={classes.stopfakenews}>\r\n                      <img src=\"/images/fakenews.svg\" />\r\n                    </div>\r\n                    <div>\r\n                      <CardContent className={classes.cardContent}>\r\n                        <Typography className={classes.heading}>\r\n                          Stop Fake News\r\n                        </Typography>\r\n                        <Typography className={classes.subheading}>\r\n                          Help in making the world better-informed by stopping\r\n                          fake news\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </div>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={4}>\r\n                <Paper className={classes.paper}>\r\n                  <div className={classes.cardactionarea}>\r\n                    <div className={classes.allImagesdiv}>\r\n                      <img src=\"/images/Group 195.svg\" />\r\n                    </div>\r\n\r\n                    <CardContent className={classes.cardContent}>\r\n                      <Typography className={classes.heading}>\r\n                        Archive your Tweets\r\n                      </Typography>\r\n                      <Typography className={classes.subheading}>\r\n                        Archive your tweets in our platform so that it stays\r\n                        forever\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={4}>\r\n                <Paper className={classes.paper}>\r\n                  <div className={classes.cardactionarea}>\r\n                    <div className={classes.allImagesdiv}>\r\n                      <img src=\"/images/Legalnews.svg\" />\r\n                    </div>\r\n\r\n                    <CardContent className={classes.cardContent}>\r\n                      <Typography className={classes.heading}>\r\n                        Save links for legal actions\r\n                      </Typography>\r\n                      <Typography className={classes.subheading}>\r\n                        Use your saved links for the future legal actions\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n         \r\n          </MobileView>\r\n         \r\n        </main>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Column } from \"simple-flexbox\";\r\nimport BaseComponent from \"../modules/baseComponent\";\r\nimport DemoComponent from \"./demo\";\r\nimport FooterComponent from \"../modules/Footer/footer\";\r\nimport Headerconditional from \"../modules/Header/Conditionalheader\";\r\n\r\nexport default class Demo extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Headerconditional />\r\n        <DemoComponent />\r\n        <FooterComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\nimport { Redirect, Switch } from \"react-router\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport getMuiTheme from \"material-ui/styles/getMuiTheme\";\r\nimport { connect } from \"react-redux\";\r\nimport { Login, SignUp } from \"./modules\";\r\nimport { history } from \"./managers/history\";\r\nimport BaseComponent from \"./modules/baseComponent\";\r\nimport Header from \"./modules/Header\";\r\nimport CardComponent from \"./modules/MainComponent\";\r\nimport Link from \"./modules/TweetlinkComponent\";\r\nimport Popup from \"./modules/popupbox\";\r\nimport Demo from \"./Demo\";\r\n\r\nclass Routes extends BaseComponent {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n        <Router history={history}>\r\n          <Switch>\r\n            {/* <Route exact path={\"/\"} component={Login} /> */}\r\n            {/* <Route exact path={\"/sign-up\"} component={SignUp} />\r\n            <Route exact path={\"/header\"} component={Header} /> */}\r\n            <Route exact path={\"/archive\"} component={CardComponent} />\r\n            {/* <Route exact path={\"/tweetlink\"} component={Link} /> */}\r\n            <Route exact path={\"/\"} component={Demo} />\r\n            {/* <Route exact path={\"/popup\"} component={Popup} /> */}\r\n            <Redirect exact from=\"*\" to=\"/\" />\r\n          </Switch>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user };\r\n};\r\nexport default connect(mapStateToProps)(Routes);\r\n","let initialState = {\r\n    isLoggedIn: false,\r\n    loginFailure: null,\r\n    deviceId: null,\r\n    sessionToken: null,\r\n    loading: false,\r\n    isForgotPasswordSuccess: false\r\n};\r\nexport default function user(state = initialState, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({\r\n    user\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from \"./reducers/index\";\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport default  createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./store.js\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./assets/styles/custom.css\";\r\n\r\nfunction Xinfin() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <Routes component={Routes} />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Xinfin />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}